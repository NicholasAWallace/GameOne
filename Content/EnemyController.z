class EnemyController : ZilchComponent
{
    [Property]
    var PaceSpeed: Real = 5.0;
    [Property]
    var ChaseSpeed: Real = 5.0;
    var MaxMoveDistance: Real = 1.0;
    var PaceDirection: Real3 = Real3(0.0, 1.0, 0.0);
    var StartPosition: Real3 = Real3();
    
    [Property]
    var TargetObject: CogPath = null;
    var ChaseTriggerDistance: Real = 100.0;
    var DistanceFromTarget: Real = 0.0;
    var ChaseDirection: Real3 = Real3();
    var ChaseColor:Real4 = Real4 (1.0, 0.0, 0.0, 1.0);
    var TargetWithinRange: Boolean = false;
    var OriginalColor: Real4 = Real4();
    
    [Dependency]
    var Transform: Transform = null;
    [Dependency]
    var Sprite: Sprite = null;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        this.StartPosition = this.Owner.Transform.Translation;
        this.OriginalColor = this.Owner.Sprite.Color;
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.TargetWithinRange = false;
        if (this.TargetObject.Cog != null)
        {
            this.CalculateChaseDirection();
            this.TargetWithinRange = (this.DistanceFromTarget <= this.ChaseTriggerDistance);
            if (this.TargetWithinRange)
            {
                this.ChaseTarget(event);
            }
        }
    }
    function CalculateChaseDirection()
    {
        this.ChaseDirection = this.TargetObject.Cog.Transform.Translation - this.Owner.Transform.Translation;
        this.DistanceFromTarget = Math.Length(this.ChaseDirection);
        this.ChaseDirection = Math.Normalize(this.ChaseDirection);
    }
    function ChaseTarget(event: UpdateEvent)
    {
        this.Owner.Sprite.Color = this.ChaseColor;
        this.Owner.Transform.Translation += this.ChaseDirection * event.Dt * this.ChaseSpeed;
    }
}